{% extends 'base.html.twig' %}

{% block title %}Property{% endblock %}

{% block body %}
    <section>
    <h2>{{ property.name }}</h2>

        <div id="carrousel">
            <div id="container" class="flex items-center justify-center">
                {% for picture in property.pictures %}
                    <img src="{{ asset(property_url ~ '/' ~ picture.url) }}" alt="picture" class="hidden" width="100" height="100">
                {% endfor %}
            </div>
            <img src="{{ asset('picture/icons8-flèche-droite-90.png') }}" alt="Prev" class="bouton" id="prev">
            <img src="{{ asset('picture/icons8-flèche-droite-90.png') }}" alt="Next" class="bouton" id="next">
        </div>

    <a href="{{ path('app_property_index') }}">back to list</a>

    <a href="{{ path('app_property_edit', {'id': property.id}) }}">edit</a>

    {{ include('property/_delete_form.html.twig') }}
    </section>
{% block javascripts %}
    <script type="text/javascript">
        document.body.onload=function (){
            let container = document.getElementById('container');
            let prev = document.getElementById('prev');
            let next = document.getElementById('next');

            container.firstElementChild.classList.remove('hidden');

            function nextSlide() {
                let img = container.querySelector('img:not(.hidden)');
                img.classList.add('hidden');
                if (img.nextElementSibling) {
                    img.nextElementSibling.classList.remove('hidden');
                } else {
                    container.firstElementChild.classList.remove('hidden');
                }
            }

            function  prevSlide() {
                let img = container.querySelector('img:not(.hidden)');
                img.classList.add('hidden');
                if (img.previousElementSibling) {
                    img.previousElementSibling.classList.remove('hidden');
                } else {
                    container.lastElementChild.classList.remove('hidden');
                }
            }

            const interval = setInterval(nextSlide, 3000);
            next.addEventListener('click', () => {
                clearInterval(interval);
                nextSlide();
            });
            prev.addEventListener('click', () => {
                clearInterval(interval);
                prevSlide();
            });
        }
    </script>
{% endblock %}
{% endblock %}
